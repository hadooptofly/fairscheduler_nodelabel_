diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java
index f74106a7da..f74c13c09b 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java
@@ -33,7 +33,9 @@
 import org.apache.hadoop.yarn.api.records.QueueACL;
 import org.apache.hadoop.yarn.api.records.QueueUserACLInfo;
 import org.apache.hadoop.yarn.api.records.Resource;
+import org.apache.hadoop.yarn.server.resourcemanager.resource.ResourceType;
 import org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.policies.DominantGPUFairnessPolicy;
 import org.apache.hadoop.yarn.util.resource.Resources;
 import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager;
 import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt;
@@ -179,6 +181,28 @@ public Resource assignContainer(FSSchedulerNode node) {
   }
 
   @Override
+  public Resource assignContainer(boolean useGpu,FSSchedulerNode node) {
+    Resource assigned = Resources.none();
+
+    // If this queue is over its limit, reject
+    //TODO REGARD ResourceType(GPU...) WHEN CHECK THIS
+    if (!assignContainerPreCheck(node)) {
+      return assigned;
+    }
+    Collections.sort(childQueues, SchedulingPolicy.GPU_POLICY.getComparator());
+    LOG.error("Nodeheartbeat:::");
+    for (FSQueue child : childQueues) {
+      LOG.error("Queue: " + child.getName() + "gpu usage: " + child.getResourceUsage().getGpuCores());
+      assigned = child.assignContainer(true, node);
+      if (!Resources.equals(assigned, Resources.none())) {
+        break;
+      }
+    }
+    return assigned;
+  }
+
+
+  @Override
   public RMContainer preemptContainer() {
     RMContainer toBePreempted = null;
 
